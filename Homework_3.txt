1. JavaScript is a lightweight, interpreted programming language that is commonly used to bring dynamic interactivity to web pages and apps. In contrast to compiled languages like C++, which are transformed into machine code for speedier execution, interpreted languages like JavaScript are handled by an interpreter at runtime. While this provides more flexibility, it may result in poorer performance than compiled languages.
2. Dynamically typed languages, such as JavaScript and Python, determine variable types at runtime, which provides flexibility but raises the chance of runtime errors. Statically typed languages, such as Java and C++, provide type safety during compilation by requiring explicit type declarations. Strongly typed languages, such as Python, have stringent type restrictions and prohibit implicit conversions, which reduces unexpected behavior. Weakly typed languages, such as JavaScript, allow for implicit conversions, which simplify code but may lead to unpredictable outcomes.
3. In JavaScript, variables can be declared in three ways: var, let, and const. The var keyword is function-scoped and can be redeclared or changed. However, it has certain unique features, such as hoisting with an undefined value. The let keyword is block-scoped, which means it can only be accessed within the block where it is defined. Unlike var, it cannot be redefined, but it may be modified. The const keyword is block-scoped like let but is reserved for variables that should not be transferred. Variables defined with const cannot be redeclared or changed.
4. Anonymous functions do not have a name and are normally utilized when passed as an argument or assigned to a variable. Higher-order functions are those that either accept other functions as arguments or return another function as their output. Callback functions are functions that are supplied as arguments to other functions and run afterwards. First-class functions are defined as functions in a language that may be assigned to variables, passed as arguments, and returned from other functions.
5. Objects are collections of key-value pairs, where the keys are strings and the values can be any data type, including functions. Objects allow one to store, retrieve, and manipulate structured data. They are declared using curly brackets, with properties within, and may be accessed or modified using dot or square bracket syntax.